#!/bin/bash --login  
 
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --job-name=kraken2 # give your job a name for easier identification (same as -J)
#SBATCH --time=168:00:00 # limit of wall clock time - how long will the job take to run? (same as -t)
#SBATCH --ntasks=1     # number of tasks - how many tasks (nodes) does your job require? (same as -n)
#SBATCH --cpus-per-task=4 # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem=50G     # memory required per node - amount of memory (in bytes)
#SBATCH --output=/mnt/scratch/vascokar/marine_iguana/eofiles/kraken2.%j.out #Standard output
#SBATCH --error=/mnt/scratch/vascokar/marine_iguana/eofiles/kraken2.%j.err #Standard error log

########## Diplay the job context ######
echo Job: $SLUM_JOB_NAME with ID $SLURM_JOB_ID
echo Running on host `hostname`
echo Job started at `date '+%T %a %d %b %Y'`
echo Directory is `pwd`
echo Using $SLURM_NTASKS processors across $SLURM_NNODES nodes

######### Assign path variables ########
INPUT_DIRECTORY=/mnt/scratch/vascokar/marine_iguana/shotgun/trimmed
OUTPUT_DIRECTORY=/mnt/scratch/vascokar/marine_iguana/shotgun/kraken2
DATABASE_DIRECTORY=/mnt/ufs18/rs-033/common-data/Bio/kraken2db/standard-Oct2020

########## Modules to Load ##########
module load  GCC/9.3.0  OpenMPI/4.0.3
module load Kraken2/2.1.0-Perl-5.30.2

########## Code to Run ###########

cd $INPUT_DIRECTORY

for f in *_R1_paired.fastq.gz # for each sample f
do
  n=${f%%_R1_paired.fastq.gz} # strip part of file name

kraken2 --db $DATABASE_DIRECTORY --paired --classified-out ${n}_cseqs#.fq \
--report $OUTPUT_DIRECTORY/${n}_kraken2_report.txt \
$INPUT_DIRECTORY/${n}_R1_paired.fastq.gz $INPUT_DIRECTORY/${n}_R2_paired.fastq.gz \
--output $OUTPUT_DIRECTORY/${n}_kraken2.out
done

##### Final time stamp ######
echo Job finished at `date '+%T %a %d %b %Y'`
